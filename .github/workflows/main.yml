name: auto-deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      db:
        image: postgres:15
        ports:
          - "5433:5432"
        env:
          POSTGRES_DB: first_db
          POSTGRES_USER: first_user
          POSTGRES_PASSWORD: root
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build With Maven
        run: mvn clean package -Dmaven.test.skip

      - name: Build Docker Images
        uses: docker/build-push-action@v2
        with:
          image: first-app-images
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-auto-deployment:today
          build-args: |
            DB_URL=jdbc:postgresql://db:5432/first_db
            DB_USERNAME=first_user
            DB_PASSWORD=root
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Images
        uses: docker/build-push-action@v2
        with:
          image: first-app-images
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-auto-deployment:today
          build-args: |
            DB_URL=jdbc:postgresql://db:5432/first_db
            DB_USERNAME=first_user
            DB_PASSWORD=root
          registry: docker.io
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}